setwd("/Users/jonsadler/Library/CloudStorage/OneDrive-UniversityofBirmingham/Teaching-materials/COURSES/4TH_YR/LM 40222 Quantitative methods/Codefiles/Week 1")
install.packages("tidyverse") # Note the use of quotes
setwd("/Users/jonsadler/Library/CloudStorage/OneDrive-UniversityofBirmingham/Teaching-materials/COURSES/4TH_YR/LM 40222 Quantitative methods/Codefiles/Week 1")
source("~/Library/CloudStorage/OneDrive-UniversityofBirmingham/Teaching-materials/COURSES/4TH_YR/LM 40222 Quantitative methods/Codefiles/Week 1/LM40222_Week_1.Rmd")
source("~/Library/CloudStorage/OneDrive-UniversityofBirmingham/Teaching-materials/COURSES/4TH_YR/LM 40222 Quantitative methods/Codefiles/Week 1/LM40222_Week_1.Rmd")
source("~/Library/CloudStorage/OneDrive-UniversityofBirmingham/Teaching-materials/COURSES/4TH_YR/LM 40222 Quantitative methods/Codefiles/Week 1/LM40222_Week_1.Rmd")
source("~/Library/CloudStorage/OneDrive-UniversityofBirmingham/Teaching-materials/COURSES/4TH_YR/LM 40222 Quantitative methods/Codefiles/Week 1/LM40222_Week_1.Rmd")
source("~/Library/CloudStorage/OneDrive-UniversityofBirmingham/Teaching-materials/COURSES/4TH_YR/LM 40222 Quantitative methods/Codefiles/Week 1/LM40222_Week_1.Rmd")
source("~/Library/CloudStorage/OneDrive-UniversityofBirmingham/Teaching-materials/COURSES/4TH_YR/LM 40222 Quantitative methods/Codefiles/Week 1/LM40222_Week_1.Rmd")
source("~/Library/CloudStorage/OneDrive-UniversityofBirmingham/Teaching-materials/COURSES/4TH_YR/LM 40222 Quantitative methods/Codefiles/Week 1/LM40222_Week_1.Rmd")
setwd("/Users/jonsadler/Library/CloudStorage/OneDrive-UniversityofBirmingham/Teaching-materials/COURSES/4TH_YR/LM 40222 Quantitative methods/Codefiles/Week 2")
library("tidyverse") # don't forget to use the quote marks!
setwd("/Users/jonsadler/Library/CloudStorage/OneDrive-UniversityofBirmingham/Teaching-materials/COURSES/4TH_YR/LM 40222 Quantitative methods/Codefiles/Week 1")
# loads a csv, remember to correctly input the file location within your working directory or point to the directory where you data are stored.
Ethnicity <- read_csv("/Users/jonsadler/Library/CloudStorage/OneDrive-UniversityofBirmingham/Teaching-materials/COURSES/4TH_YR/LM 40222 Quantitative methods/Data/Birmingham Census 2021 MSOA/TS021 - Ethnic group.csv")
Rooms <- read_csv("/Users/jonsadler/Library/CloudStorage/OneDrive-UniversityofBirmingham/Teaching-materials/COURSES/4TH_YR/LM 40222 Quantitative methods/Data/Birmingham Census 2021 MSOA/TS053 - Occupancy Rating.csv")
Qualifications <-read_csv("/Users/jonsadler/Library/CloudStorage/OneDrive-UniversityofBirmingham/Teaching-materials/COURSES/4TH_YR/LM 40222 Quantitative methods/Data/Birmingham Census 2021 MSOA/TS067 - Highest level of qualification.csv")
Employment <-read_csv("/Users/jonsadler/Library/CloudStorage/OneDrive-UniversityofBirmingham/Teaching-materials/COURSES/4TH_YR/LM 40222 Quantitative methods/Data/Birmingham Census 2021 MSOA/TS066 - Economic activity status.csv")
Colnames_Ethnicity <- names(Ethnicity) # 52 Columns
Colnames_Rooms <- names(Rooms) # 14 columns
# view column names of a dataframe
Colnames_Qualifications <- names(Qualifications) # there are 19 columns. A combination of values and % data
Colnames_Employment <- names(Employment) # 64 columns
print(Colnames_Ethnicity)
Colnames_Rooms
Colnames_Qualifications
Colnames_Employment
# selecting specific columns only
# note this action overwrites the labels you made for the original data,
# so if you make a mistake you will need to reload the data into R
Ethnicity <- Ethnicity[, c(2, 38)] #% White: English, Welsh, Scottish, Northern Irish or British
Rooms <- Rooms[, c(2, 13)] #
Employment <- Employment[, c(2, 28)] # % Economically active (excluding full-time students): Unemployed
Qualifications <- Qualifications[, c(2, 16)] # % Level 4 qualifications or above
# to change an individual column name
names(Ethnicity)[2] <- "White_British"
# to change both column names
names(Ethnicity)<- c("Code", "White_British")
names(Rooms)<- c("Code", "Low_Occupancy")
names(Employment)<- c("Code", "Unemployed")
names(Qualifications)<- c("Code", "Qualification")
#1 Merge Ethnicity and Rooms to create a new object called "merged_data_1"
merged_data_1 <- merge(Ethnicity, Rooms, by="Code")
#2 Merge the "merged_data_1" object with Employment to create a new merged data object
merged_data_2 <- merge(merged_data_1, Employment, by="Code")
#3 Merge the "merged_data_2" object with Qualifications to create a new data object
Census.Data <- merge(merged_data_2, Qualifications, by="Code")
#4 Remove the "merged_data" objects as we won't need them anymore
rm(merged_data_1, merged_data_2)
# Writes the data to a csv named "practical_data" in your file directory
write.csv(Census.Data, "practical_data.csv", row.names=F)
# selecting specific columns only
# note this action overwrites the labels you made for the original data,
# so if you make a mistake you will need to reload the data into R
Ethnicity <- Ethnicity[, c(2, 38)] #% White: English, Welsh, Scottish, Northern Irish or British
View(Census.Data)
source("~/Library/CloudStorage/OneDrive-UniversityofBirmingham/Teaching-materials/COURSES/4TH_YR/LM 40222 Quantitative methods/Codefiles/Week 1/LM40222_Week_1.Rmd")
getwd()
setwd("/Users/jonsadler/Library/CloudStorage/OneDrive-UniversityofBirmingham/Teaching-materials/COURSES/4TH_YR/LM 40222 Quantitative methods/Data/Birmingham Census 2021 MSOA")
getwd()
BhamData <- read_csv("/Users/jonsadler/Library/CloudStorage/OneDrive-UniversityofBirmingham/Teaching-materials/COURSES/4TH_YR/LM 40222 Quantitative methods/Data/Birmingham Census 2021 MSOA/practical_data.csv")
glimpse(BhamData)
source("~/Library/CloudStorage/OneDrive-UniversityofBirmingham/Teaching-materials/COURSES/4TH_YR/LM 40222 Quantitative methods/Codefiles/Week 1/LM40222_Week_1.Rmd")
ggplot(data = BhamData)
ggplot(data = BhamData) # when run it we get a grey box in plot window (bottom left)
View(Qualifications)
ggplot(
data = BhamData,
mapping = aes(x = Unemployed, y = Qualification)
)
ggplot(
data = BhamData,
mapping = aes(x = Unemployed, y = Qualification)
) + geom_point()
ggplot(
data = BhamData,
mapping = aes(x = Unemployed, y = Qualification, colour=White_British)
) + geom_point()
ggplot(
data = BhamData,
mapping = aes(x = Unemployed, y = Qualification, colour = White_British)
) +
geom_point() +
scale_colour_gradient(low = "lightblue", high = "darkblue")
ggplot(
data = BhamData,
mapping = aes(x = Unemployed, y = Qualification, colour = White_British)
) +
geom_point() +
scale_colour_gradient(low = "lightred", high = "darkred")
ggplot(
data = BhamData,
mapping = aes(x = Unemployed, y = Qualification, colour = White_British)
) +
geom_point() +
scale_colour_gradient(low = "red", high = "darkred")
ggplot(
data = BhamData,
mapping = aes(x = Unemployed, y = Qualification, colour = White_British)
) +
geom_point() +
scale_colour_gradient(low = "red", high = "darkred") +
geom_smooth(method = "lm")
ggplot(
data = BhamData,
mapping = aes(x = Unemployed, y = Qualification)
) +
geom_point(colour = White_British) +
scale_colour_gradient(low = "red", high = "darkred") +
geom_smooth(method = "lm")
ggplot(
data = BhamData,
mapping = aes(x = Unemployed, y = Qualification)
) +
geom_point(aes(colour = White_British)) +
scale_colour_gradient(low = "red", high = "darkred") +
geom_smooth(method = "lm")
ggplot(
data = BhamData,
mapping = aes(x = Unemployed, y = Qualification)
) +
geom_point(aes(colour = White_British, size = White_British)) +
scale_colour_gradient(low = "red", high = "darkred") +
geom_smooth(method = "lm")
View(BhamData)
ggplot(
data = BhamData,
mapping = aes(x = Unemployed, y = Qualification)
) +
geom_point(aes(colour = White_British, size = Low_Occupancy)) +
scale_colour_gradient(low = "red", high = "darkred") +
geom_smooth(method = "lm")
View(BhamData)
View(BhamData)
View(Rooms)
# loads a csv, remember to correctly input the file location within your working directory or point to the directory where you data are stored.
Ethnicity <- read_csv("/Users/jonsadler/Library/CloudStorage/OneDrive-UniversityofBirmingham/Teaching-materials/COURSES/4TH_YR/LM 40222 Quantitative methods/Data/Birmingham Census 2021 MSOA/TS021 - Ethnic group.csv")
Rooms <- read_csv("/Users/jonsadler/Library/CloudStorage/OneDrive-UniversityofBirmingham/Teaching-materials/COURSES/4TH_YR/LM 40222 Quantitative methods/Data/Birmingham Census 2021 MSOA/TS053 - Occupancy Rating.csv")
Qualifications <-read_csv("/Users/jonsadler/Library/CloudStorage/OneDrive-UniversityofBirmingham/Teaching-materials/COURSES/4TH_YR/LM 40222 Quantitative methods/Data/Birmingham Census 2021 MSOA/TS067 - Highest level of qualification.csv")
Employment <-read_csv("/Users/jonsadler/Library/CloudStorage/OneDrive-UniversityofBirmingham/Teaching-materials/COURSES/4TH_YR/LM 40222 Quantitative methods/Data/Birmingham Census 2021 MSOA/TS066 - Economic activity status.csv")
Colnames_Rooms <- names(Rooms) # 14 columns
Colnames_Rooms
print(Colnames_Rooms)
# selecting specific columns only
# note this action overwrites the labels you made for the original data,
# so if you make a mistake you will need to reload the data into R
Ethnicity <- Ethnicity[, c(2, 38)] #% White: English, Welsh, Scottish, Northern Irish or British
Rooms <- Rooms[, c(2, 14)] #
Employment <- Employment[, c(2, 28)] # % Economically active (excluding full-time students): Unemployed
Qualifications <- Qualifications[, c(2, 16)] # % Level 4 qualifications or above
View(Rooms)
source("~/Library/CloudStorage/OneDrive-UniversityofBirmingham/Teaching-materials/COURSES/4TH_YR/LM 40222 Quantitative methods/Codefiles/Week 1/LM40222_Week_1.Rmd")
# to change both column names
names(Ethnicity)<- c("Code", "White_British")
names(Rooms)<- c("Code", "Low_Occupancy")
names(Employment)<- c("Code", "Unemployed")
names(Qualifications)<- c("Code", "Qualification")
#1 Merge Ethnicity and Rooms to create a new object called "merged_data_1"
merged_data_1 <- merge(Ethnicity, Rooms, by="Code")
#2 Merge the "merged_data_1" object with Employment to create a new merged data object
merged_data_2 <- merge(merged_data_1, Employment, by="Code")
#3 Merge the "merged_data_2" object with Qualifications to create a new data object
Census.Data <- merge(merged_data_2, Qualifications, by="Code")
#4 Remove the "merged_data" objects as we won't need them anymore
rm(merged_data_1, merged_data_2)
getwd
getwd()
# Writes the data to a csv named "practical_data" in your file directory
write.csv(Census.Data, "/Users/jonsadler/Library/CloudStorage/OneDrive-UniversityofBirmingham/Teaching-materials/COURSES/4TH_YR/LM 40222 Quantitative methods/Data/Birmingham Census 2021 MSOA/practical_data.csv", row.names=F)
BhamData <- read_csv("/Users/jonsadler/Library/CloudStorage/OneDrive-UniversityofBirmingham/Teaching-materials/COURSES/4TH_YR/LM 40222 Quantitative methods/Data/Birmingham Census 2021 MSOA/practical_data.csv")
glimpse(BhamData)
summary(BhamData)
ggplot(
data = BhamData,
mapping = aes(x = Unemployed, y = Qualification)
) +
geom_point(aes(size = White_British)) +
scale_colour_gradient(low = "red", high = "darkred") +
geom_smooth(method = "lm")
ggplot(
data = BhamData,
mapping = aes(x = Unemployed, y = Qualification)
) +
geom_point(aes(size = White_British, colour = White_British)) +
scale_colour_gradient(low = "red", high = "darkred") +
geom_smooth(method = "lm")
ggplot(
data = BhamData,
mapping = aes(x = Unemployed, y = Qualification)
) +
geom_point(aes(size = White_British, colour = White_British)) +
scale_colour_gradient(low = "red", high = "darkred")
ggplot(
data = BhamData,
mapping = aes(x = Unemployed, y = Qualification)
) +
geom_point(aes(size = White_British, colour = White_British)) +
scale_colour_gradient(low = "red", high = "darkred") +
geom_smooth(method = "lm")
ggplot(
data = BhamData,
mapping = aes(x = Unemployed, y = Qualification)
) +
geom_point(aes(size = White_British, colour = White_British)) +
scale_colour_gradient(low = "red", high = "darkred") +
geom_smooth(method = "loess", color = "red")
ggplot(
data = BhamData,
mapping = aes(x = Unemployed, y = Qualification)
) +
geom_point(aes(size = White_British, colour = White_British)) +
scale_colour_gradient(low = "red", high = "darkred") +
geom_smooth(method = "loess", color = "red") +
labs(title = "Relationships between educational attainment and unemployment from the 2021 census", subtitle = "Links to ethnicity", xlab("# of unemployed residents"), ylab("# of residents with higher level qualifications"))
ggplot(
data = BhamData,
mapping = aes(x = Unemployed, y = Qualification)
) +
geom_point(aes(size = White_British, colour = White_British)) +
scale_colour_gradient(low = "red", high = "darkred") +
geom_smooth(method = "loess", color = "red") +
labs(title = "Relationships between educational attainment and unemployment from the 2021 census", subtitle = "Links to ethnicity", x = "Unemployed residents (%)", y =  #Residents with higher level qualifications (%)")
ggplot(
data = BhamData,
mapping = aes(x = Unemployed, y = Qualification)
) +
geom_point(aes(size = White_British, colour = White_British)) +
scale_colour_gradient(low = "red", high = "darkred") +
geom_smooth(method = "loess", color = "red") +
labs(title = "Relationships between educational attainment and unemployment from the 2021 census", subtitle = "Links to ethnicity", x = "Unemployed residents (%)", y =  "Residents with higher level qualifications (%)")
ggplot(
data = BhamData,
mapping = aes(x = Unemployed, y = Qualification)
) +
geom_point(aes(size = White_British, colour = ggplot(
data = BhamData,
mapping = aes(x = Unemployed, y = Qualification)
) +
geom_point(aes(size = White_British, colour = White_British)) +
scale_colour_gradient(low = "red", high = "darkred") +
geom_smooth(method = "loess", color = "red"))) +
scale_colour_gradient(low = "red", high = "darkred") +
geom_smooth(method = "loess", color = "red") +
labs(title = "Relationships between educational attainment and unemployment from the 2021 census", subtitle = "Links to ethnicity", x = "Unemployed residents (%)", y =  "Residents with higher level qualifications (%)")
ggplot(
data = BhamData,
mapping = aes(x = Unemployed, y = Qualification)
) +
geom_point(aes(size = White_British, colour = ggplot(
data = BhamData,
mapping = aes(x = Unemployed, y = Qualification)
) +
geom_point(aes(size = White_British, colour = White_British)) +
scale_colour_gradient(low = "red", high = "darkred") +
geom_smooth(method = "loess", color = "red"))) +
labs(title = "Relationships between educational attainment and unemployment from the 2021 census", subtitle = "Links to ethnicity", x = "Unemployed residents (%)", y =  "Residents with higher level qualifications (%)")
ggplot(
data = BhamData,
mapping = aes(x = Unemployed, y = Qualification)) +
geom_point(aes(size = White_British, colour = ggplot(
data = BhamData,
mapping = aes(x = Unemployed, y = Qualification)) +
geom_point(aes(size = White_British, colour = White_British)) +
scale_colour_gradient(low = "red", high = "darkred") +
geom_smooth(method = "loess", color = "red"))) +
labs(title = "Relationships between educational attainment and unemployment from the 2021 census", subtitle = "Links to ethnicity", x = "Unemployed residents (%)", y =  "Residents with higher level qualifications (%)")
ggplot(
data = BhamData,
mapping = aes(x = Unemployed, y = Qualification)) +
geom_point(aes(size = White_British, colour = ggplot(
data = BhamData,
mapping = aes(x = Unemployed, y = Qualification)) +
geom_point(aes(size = White_British, colour = White_British)) +
scale_colour_gradient(low = "red", high = "darkred") +
geom_smooth(method = "loess", color = "red") +
labs(title = "Relationships between educational attainment and unemployment from the 2021 census", subtitle = "Links to ethnicity", x = "Unemployed residents (%)", y =  "Residents with higher level qualifications (%)")
ggplot(
data = BhamData,
mapping = aes(x = Unemployed, y = Qualification)) +
geom_point(aes(size = White_British, colour = ggplot(
data = BhamData,
mapping = aes(x = Unemployed, y = Qualification)) +
geom_point(aes(size = White_British, colour = White_British)) +
scale_colour_gradient(low = "red", high = "darkred") +
geom_smooth(method = "loess", color = "red") +
ggplot(
data = BhamData,
mapping = aes(x = Unemployed, y = Qualification)) +
geom_point(aes(size = White_British, colour = ggplot(
data = BhamData,
mapping = aes(x = Unemployed, y = Qualification)) +
geom_point(aes(size = White_British, colour = White_British)) +
scale_colour_gradient(low = "red", high = "darkred") +
geom_smooth(method = "loess", color = "red")
ggplot(data = BhamData, mapping = aes(x = Unemployed, y = Qualification)) +
geom_point(aes(size = White_British, colour = White_British)) +
scale_colour_gradient(low = "red", high = "darkred") +
geom_smooth(method = "loess", color = "red")
source("~/Library/CloudStorage/OneDrive-UniversityofBirmingham/Teaching-materials/COURSES/4TH_YR/LM 40222 Quantitative methods/Codefiles/Week 1/LM40222_Week_1.Rmd")
ggplot(
data = BhamData,
mapping = aes(x = Unemployed, y = Qualification)
) +
geom_point(aes(size = White_British, colour = White_British)) +
scale_colour_gradient(low = "red", high = "darkred") +
geom_smooth(method = "gam", formula = y ~ s(x)),color = "red")
ggplot(
data = BhamData,
mapping = aes(x = Unemployed, y = Qualification)
) +
geom_point(aes(size = White_British, colour = White_British)) +
scale_colour_gradient(low = "red", high = "darkred") +
geom_smooth(method = "gam", formula = y ~ s(x)))
ggplot(
data = BhamData,
mapping = aes(x = Unemployed, y = Qualification)
) +
geom_point(aes(size = White_British, colour = White_British)) +
scale_colour_gradient(low = "red", high = "darkred") +
geom_smooth(method = "gam", formula = y ~ s(x)))
ggplot(
data = BhamData,
mapping = aes(x = Unemployed, y = Qualification)
) +
geom_point(aes(size = White_British, colour = White_British)) +
scale_colour_gradient(low = "red", high = "darkred") +
geom_smooth(method = "gam", formula = y ~ s(x), color = "blue")
ggplot(data = BhamData, mapping = aes(x = Unemployed, y = Qualification)) +
geom_point(aes(size = White_British, colour = White_British)) +
scale_colour_gradient(low = "red", high = "darkred") +
geom_smooth(method = "lm", color = "red")
ggplot(data = BhamData, mapping = aes(x = Unemployed, y = Qualification)) +
geom_point(aes(size = White_British, colour = White_British)) +
scale_colour_gradient(low = "red", high = "darkred") +
geom_smooth(method = "lm", color = "red")
ggplot(data = BhamData, mapping = aes(x = Unemployed, y = Qualification)) +
geom_point(aes(size = White_British, colour = White_British)) +
scale_colour_gradient(low = "red", high = "darkred") +
geom_smooth(method = "lm", color = "red") +
labs(
title = "Educational attainment and unemployment levels in Birmingham",
subtitle = "Links to ethnicity",
x = "Unemployment level (%)", y = "Residents with highter level education (% level 4 or aboe)",
color = "White_British", size = "White_British"
)
ggplot(data = BhamData, mapping = aes(x = Unemployed, y = Qualification)) +
geom_point(aes(size = White_British, colour = White_British)) +
scale_colour_gradient(low = "red", high = "darkred") +
geom_smooth(method = "lm", color = "red") +
labs(
title = "Educational attainment and unemployment levels in Birmingham",
subtitle = "Links to ethnicity",
x = "Resident Unemployment (%)", y = "Residents education attainment (% level 4 or above)",
color = "White_British", size = "White_British"
)
ggplot(data = BhamData, mapping = aes(x = Unemployed, y = Qualification)) +
geom_point(aes(size = White_British, colour = White_British)) +
scale_colour_gradient(low = "red", high = "darkred") +
geom_smooth(method = "lm", color = "red") +
labs(
title = "Educational attainment and unemployment levels in Birmingham",
subtitle = "Links to ethnicity",
x = "Resident Unemployment (%)", y = "Residents education  (% level 4 or above)",
color = "White_British", size = "White_British"
)
ggplot(data = BhamData, mapping = aes(x = Unemployed, y = Qualification)) +
geom_point(aes(size = White_British, colour = White_British)) +
scale_colour_gradient(low = "red", high = "darkred") +
geom_smooth(method = "lm", color = "red") +
labs(
title = "Educational attainment and unemployment levels in Birmingham",
subtitle = "Links to ethnicity",
x = "Resident Unemployment (%)", y = "Residents education  (% level 4 or above)",
color = "White British (%)", size = "White British (%)"
)
BhamPlot <- ggplot(data = BhamData, mapping = aes(x = Unemployed, y = Qualification)) +
geom_point(aes(size = White_British, colour = White_British)) +
scale_colour_gradient(low = "red", high = "darkred") +
geom_smooth(method = "lm", color = "red") +
labs(
title = "Educational attainment and unemployment levels in Birmingham",
subtitle = "Links to ethnicity",
x = "Resident Unemployment (%)", y = "Residents education  (% level 4 or above)",
color = "White British (%)", size = "White British (%)"
)
ggsave(filename = "/Users/jonsadler/Library/CloudStorage/OneDrive-UniversityofBirmingham/Teaching-materials/COURSES/4TH_YR/LM 40222 Quantitative methods/Codefiles/Week 2/BhamPlot.pgn", plot = "BhamPlot", width = 12, height = 10, dpi = 300, units = "cm")
ggsave(filename = "/Users/jonsadler/Library/CloudStorage/OneDrive-UniversityofBirmingham/Teaching-materials/COURSES/4TH_YR/LM 40222 Quantitative methods/Codefiles/Week 2/BhamPlot.png", plot = "BhamPlot", width = 12, height = 10, dpi = 300, units = "cm")
ggsave(filename = "/Users/jonsadler/Library/CloudStorage/OneDrive-UniversityofBirmingham/Teaching-materials/COURSES/4TH_YR/LM 40222 Quantitative methods/Codefiles/Week 2/BhamPlot.png", plot = "BhamPlot", width = 12, height = 10, dpi = 300, units = "cm")
BhamPlot <- ggplot(data = BhamData, mapping = aes(x = Unemployed, y = Qualification)) +
geom_point(aes(size = White_British, colour = White_British)) +
scale_colour_gradient(low = "red", high = "darkred") +
geom_smooth(method = "lm", color = "red") +
labs(
title = "Educational attainment and unemployment levels in Birmingham",
subtitle = "Links to ethnicity",
x = "Resident Unemployment (%)", y = "Residents education  (% level 4 or above)",
color = "White British (%)", size = "White British (%)"
)
BhamPlot
ggsave(filename = "/Users/jonsadler/Library/CloudStorage/OneDrive-UniversityofBirmingham/Teaching-materials/COURSES/4TH_YR/LM 40222 Quantitative methods/Codefiles/Week 2/", plot = "BhamPlot", width = 12, height = 10, dpi = 300, units = "cm")
ggsave(filename = "/Users/jonsadler/Library/CloudStorage/OneDrive-UniversityofBirmingham/Teaching-materials/COURSES/4TH_YR/LM 40222 Quantitative methods/Codefiles/Week 2/test.jpg", plot = "BhamPlot", width = 12, height = 10, dpi = 300, units = "cm")
ggsave(filename = "/Users/jonsadler/Library/CloudStorage/OneDrive-UniversityofBirmingham/Teaching-materials/COURSES/4TH_YR/LM 40222 Quantitative methods/Codefiles/Week 2/test.jpg", plot="BhamPlot", width = 12, height = 10, dpi = 300, units = "cm")
ggsave(
filename = "/Users/jonsadler/Library/CloudStorage/OneDrive-UniversityofBirmingham/Teaching-materials/COURSES/4TH_YR/LM 40222 Quantitative methods/Codefiles/Week 2/BhamPlot.jpg",
plot = BhamPlot,  # Remove the quotes around BhamPlot
width = 12,
height = 10,
dpi = 300,
units = "cm"
)
ggplot(BhamData, aes(x = Qualification)) +
geom_histogram(binwidth = 50)
ggplot(BhamData, aes(x = Qualification)) +
geom_histogram(binwidth = 10)
ggplot(BhamData, aes(x = Qualification)) +
geom_histogram(binwidth = 1)
ggplot(BhamData, aes(x = Qualification)) +
geom_histogram(binwidth = 5)
ggplot(BhamData, aes(x = Qualification)) +
geom_density()
ggplot(BhamData, aes(x = Qualification)) + geom_histogram()
geom_density()
ggplot(BhamData, aes(x = Qualification)) +
geom_histogram(binwidth = 5) + geom_density(col="red")
ggplot(BhamData, aes(x = Qualification)) +
geom_histogram(binwidth = 5)
source("~/Library/CloudStorage/OneDrive-UniversityofBirmingham/Teaching-materials/COURSES/4TH_YR/LM 40222 Quantitative methods/Codefiles/Week 1/LM40222_Week_1.Rmd")
source("~/Library/CloudStorage/OneDrive-UniversityofBirmingham/Teaching-materials/COURSES/4TH_YR/LM 40222 Quantitative methods/Codefiles/Week 1/LM40222_Week_1.Rmd")
source("~/Library/CloudStorage/OneDrive-UniversityofBirmingham/Teaching-materials/COURSES/4TH_YR/LM 40222 Quantitative methods/Codefiles/Week 1/LM40222_Week_1.Rmd")
ggplot(BhamData, aes(x = Qualification)) +
geom_histogram(binwidth = 5)
getwd()
BhamData <- read_csv("/Users/jonsadler/Library/CloudStorage/OneDrive-UniversityofBirmingham/Teaching-materials/COURSES/4TH_YR/LM 40222 Quantitative methods/Data/Birmingham Census 2021 MSOA/practical_data.csv")
